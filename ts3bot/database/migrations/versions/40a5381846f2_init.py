"""Init

Revision ID: 40a5381846f2
Revises: 
Create Date: 2020-04-06 13:14:13.560467

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "40a5381846f2"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "accounts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=41), nullable=False),
        sa.Column(
            "world",
            sa.Enum(
                "ANVIL_ROCK",
                "BORLIS_PASS",
                "YAKS_BEND",
                "HENGE_OF_DENRAVI",
                "MAGUUMA",
                "SORROWS_FURNACE",
                "GATE_OF_MADNESS",
                "JADE_QUARRY",
                "FORT_ASPENWOOD",
                "EHMRY_BAY",
                "STORMBLUFF_ISLE",
                "DARKHAVEN",
                "SANCTUM_OF_RALL",
                "CRYSTAL_DESERT",
                "ISLE_OF_JANTHIR",
                "SEA_OF_SORROWS",
                "TARNISHED_COAST",
                "NORTHERN_SHIVERPEAKS",
                "BLACKGATE",
                "FERGUSONS_CROSSING",
                "DRAGONBRAND",
                "KAINENG",
                "DEVONAS_REST",
                "EREDON_TERRACE",
                "FISSURE_OF_WOE",
                "DESOLATION",
                "GANDARA",
                "BLACKTIDE",
                "RING_OF_FIRE",
                "UNDERWORLD",
                "FAR_SHIVERPEAKS",
                "WHITESIDE_RIDGE",
                "RUINS_OF_SURMIA",
                "SEAFARERS_REST",
                "VABBI",
                "PIKEN_SQUARE",
                "AURORA_GLADE",
                "GUNNARS_HOLD",
                "JADE_SEA",
                "FORT_RANIK",
                "AUGURY_ROCK",
                "VIZUNAH_SQUARE",
                "ARBORSTONE",
                "KODASH",
                "RIVERSIDE",
                "ELONA_REACH",
                "ABADDONS_MOUTH",
                "DRAKKAR_LAKE",
                "MILLERS_SOUND",
                "DZAGONUR",
                "BARUCH_BAY",
                name="world",
            ),
            nullable=False,
        ),
        sa.Column("api_key", sa.String(length=72), nullable=False),
        sa.Column("is_valid", sa.Boolean(), nullable=False),
        sa.Column("last_check", sa.DateTime(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_accounts")),
        sa.UniqueConstraint("name", name=op.f("uq_accounts_name")),
    )
    op.create_table(
        "groups_world",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column(
            "world",
            sa.Enum(
                "ANVIL_ROCK",
                "BORLIS_PASS",
                "YAKS_BEND",
                "HENGE_OF_DENRAVI",
                "MAGUUMA",
                "SORROWS_FURNACE",
                "GATE_OF_MADNESS",
                "JADE_QUARRY",
                "FORT_ASPENWOOD",
                "EHMRY_BAY",
                "STORMBLUFF_ISLE",
                "DARKHAVEN",
                "SANCTUM_OF_RALL",
                "CRYSTAL_DESERT",
                "ISLE_OF_JANTHIR",
                "SEA_OF_SORROWS",
                "TARNISHED_COAST",
                "NORTHERN_SHIVERPEAKS",
                "BLACKGATE",
                "FERGUSONS_CROSSING",
                "DRAGONBRAND",
                "KAINENG",
                "DEVONAS_REST",
                "EREDON_TERRACE",
                "FISSURE_OF_WOE",
                "DESOLATION",
                "GANDARA",
                "BLACKTIDE",
                "RING_OF_FIRE",
                "UNDERWORLD",
                "FAR_SHIVERPEAKS",
                "WHITESIDE_RIDGE",
                "RUINS_OF_SURMIA",
                "SEAFARERS_REST",
                "VABBI",
                "PIKEN_SQUARE",
                "AURORA_GLADE",
                "GUNNARS_HOLD",
                "JADE_SEA",
                "FORT_RANIK",
                "AUGURY_ROCK",
                "VIZUNAH_SQUARE",
                "ARBORSTONE",
                "KODASH",
                "RIVERSIDE",
                "ELONA_REACH",
                "ABADDONS_MOUTH",
                "DRAKKAR_LAKE",
                "MILLERS_SOUND",
                "DZAGONUR",
                "BARUCH_BAY",
                name="world",
            ),
            nullable=False,
        ),
        sa.Column("is_linked", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_groups_world")),
        sa.UniqueConstraint("group_id", name=op.f("uq_groups_world_group_id")),
        sa.UniqueConstraint("world", name=op.f("uq_groups_world_world")),
    )
    op.create_table(
        "guilds",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("guid", sa.String(length=36), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("tag", sa.String(length=32), nullable=False),
        sa.Column("group_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_guilds")),
        sa.UniqueConstraint("guid", name=op.f("uq_guilds_guid")),
    )
    op.create_table(
        "identities",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("guid", sa.String(length=32), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_identities")),
        sa.UniqueConstraint("guid", name=op.f("uq_identities_guid")),
    )
    op.create_table(
        "link_account_guild",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("account_id", sa.Integer(), nullable=False),
        sa.Column("guild_id", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accounts.id"],
            name=op.f("fk_link_account_guild_account_id_accounts"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["guild_id"],
            ["guilds.id"],
            name=op.f("fk_link_account_guild_guild_id_guilds"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_link_account_guild")),
    )
    op.create_table(
        "link_identity_account",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("account_id", sa.Integer(), nullable=False),
        sa.Column("identity_id", sa.Integer(), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accounts.id"],
            name=op.f("fk_link_identity_account_account_id_accounts"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["identity_id"],
            ["identities.id"],
            name=op.f("fk_link_identity_account_identity_id_identities"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_link_identity_account")),
        sa.UniqueConstraint(
            "account_id",
            "is_deleted",
            "deleted_at",
            name=op.f("uq_link_identity_account_account_id"),
        ),
        sa.UniqueConstraint(
            "identity_id",
            "is_deleted",
            "deleted_at",
            name=op.f("uq_link_identity_account_identity_id"),
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("link_identity_account")
    op.drop_table("link_account_guild")
    op.drop_table("identities")
    op.drop_table("guilds")
    op.drop_table("groups_world")
    op.drop_table("accounts")
    # ### end Alembic commands ###
