"""Init

Revision ID: 40a5381846f2
Revises: 
Create Date: 2020-02-21 20:55:25.553091

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "40a5381846f2"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "accounts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "world",
            sa.Enum(
                "ANVIL_ROCK",
                "BORLIS_PASS",
                "YAKS_BEND",
                "HENGE_OF_DENRAVI",
                "MAGUUMA",
                "SORROWS_FURNACE",
                "GATE_OF_MADNESS",
                "JADE_QUARRY",
                "FORT_ASPENWOOD",
                "EHMRY_BAY",
                "STORMBLUFF_ISLE",
                "DARKHAVEN",
                "SANCTUM_OF_RALL",
                "CRYSTAL_DESERT",
                "ISLE_OF_JANTHIR",
                "SEA_OF_SORROWS",
                "TARNISHED_COAST",
                "NORTHERN_SHIVERPEAKS",
                "BLACKGATE",
                "FERGUSONS_CROSSING",
                "DRAGONBRAND",
                "KAINENG",
                "DEVONAS_REST",
                "EREDON_TERRACE",
                "FISSURE_OF_WOE",
                "DESOLATION",
                "GANDARA",
                "BLACKTIDE",
                "RING_OF_FIRE",
                "UNDERWORLD",
                "FAR_SHIVERPEAKS",
                "WHITESIDE_RIDGE",
                "RUINS_OF_SURMIA",
                "SEAFARERS_REST",
                "VABBI",
                "PIKEN_SQUARE",
                "AURORA_GLADE",
                "GUNNARS_HOLD",
                "JADE_SEA",
                "FORT_RANIK",
                "AUGURY_ROCK",
                "VIZUNAH_SQUARE",
                "ARBORSTONE",
                "KODASH",
                "RIVERSIDE",
                "ELONA_REACH",
                "ABADDONS_MOUTH",
                "DRAKKAR_LAKE",
                "MILLERS_SOUND",
                "DZAGONUR",
                "BARUCH_BAY",
                name="world",
            ),
            nullable=False,
        ),
        sa.Column("api_key", sa.String(), nullable=False),
        sa.Column("is_valid", sa.Boolean(), nullable=False),
        sa.Column("last_check", sa.DateTime(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "groups_world",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column(
            "world",
            sa.Enum(
                "ANVIL_ROCK",
                "BORLIS_PASS",
                "YAKS_BEND",
                "HENGE_OF_DENRAVI",
                "MAGUUMA",
                "SORROWS_FURNACE",
                "GATE_OF_MADNESS",
                "JADE_QUARRY",
                "FORT_ASPENWOOD",
                "EHMRY_BAY",
                "STORMBLUFF_ISLE",
                "DARKHAVEN",
                "SANCTUM_OF_RALL",
                "CRYSTAL_DESERT",
                "ISLE_OF_JANTHIR",
                "SEA_OF_SORROWS",
                "TARNISHED_COAST",
                "NORTHERN_SHIVERPEAKS",
                "BLACKGATE",
                "FERGUSONS_CROSSING",
                "DRAGONBRAND",
                "KAINENG",
                "DEVONAS_REST",
                "EREDON_TERRACE",
                "FISSURE_OF_WOE",
                "DESOLATION",
                "GANDARA",
                "BLACKTIDE",
                "RING_OF_FIRE",
                "UNDERWORLD",
                "FAR_SHIVERPEAKS",
                "WHITESIDE_RIDGE",
                "RUINS_OF_SURMIA",
                "SEAFARERS_REST",
                "VABBI",
                "PIKEN_SQUARE",
                "AURORA_GLADE",
                "GUNNARS_HOLD",
                "JADE_SEA",
                "FORT_RANIK",
                "AUGURY_ROCK",
                "VIZUNAH_SQUARE",
                "ARBORSTONE",
                "KODASH",
                "RIVERSIDE",
                "ELONA_REACH",
                "ABADDONS_MOUTH",
                "DRAKKAR_LAKE",
                "MILLERS_SOUND",
                "DZAGONUR",
                "BARUCH_BAY",
                name="world",
            ),
            nullable=False,
        ),
        sa.Column("is_linked", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("group_id"),
        sa.UniqueConstraint("world"),
    )
    op.create_table(
        "guilds",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("guid", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("tag", sa.String(), nullable=False),
        sa.Column("group_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("guid"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "identities",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("guid", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("guid"),
    )
    op.create_table(
        "link_account_guild",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("account_id", sa.Integer(), nullable=False),
        sa.Column("guild_id", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(["account_id"], ["accounts.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["guild_id"], ["guilds.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "link_identity_account",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("account_id", sa.Integer(), nullable=False),
        sa.Column("identity_id", sa.Integer(), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["account_id"], ["accounts.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["identity_id"], ["identities.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "account_id", "is_deleted", "deleted_at", name="_account_deleted_uc_"
        ),
        sa.UniqueConstraint(
            "identity_id", "is_deleted", "deleted_at", name="_identity_deleted_uc_"
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("link_identity_account")
    op.drop_table("link_account_guild")
    op.drop_table("identities")
    op.drop_table("guilds")
    op.drop_table("groups_world")
    op.drop_table("accounts")
    # ### end Alembic commands ###
